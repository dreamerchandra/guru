import { v4 as uuidv4 } from 'uuid';

export function parseAutoGeneratedError (string) {
  return string?.split?.('.')?.[1] ?? false;
}

export class InternalError extends Error {
  constructor (msg, code) {
    const error = new Error(msg);
    error.code = code;
    return error;
  }
}


export const isValidUrl = (url) => {
  try {
    return new URL(url);
  } catch (err) {
    return false
  }
} 


export const getUuid = () => {
  return uuidv4()
}


export function shuffleArray (array) {
  const clone = JSON.parse(JSON.stringify(array))
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [clone[i], clone[j]] = [clone[j], clone[i]];
  }
  return clone
}